package com.example.annimation;
/*
Object Graph Serialization

Serialization of multiple objects through reference
Similarly , if object game would be serialized,
then ALL References in the Game Would be serialized.
However, those references should be Serializable
so, all the internal references should belong to
serializable classes.

class RatSer1 extends PussySer1
If using one of the classes as a child, than this error occurs:
" java.lang.StackOverflowError
It seems that Should be No Reference in a Parent to a Child
and then serialize the Parent
 */

import java.io.*;
 class WolfySer1 implements Serializable {
    transient static  int  w = 1250;// transient static has no effect
    // because the static variables are not part
    // of the object state (of the system)
    transient  String password = "KakaMaca";// just using transient to shield the var

    DogSer1 d = new DogSer1();
}

 class DogSer1 implements Serializable {
    transient int i = 10;// instead of  i= 10 will be assigned  0
    PussySer1 p = new PussySer1();

    int j = 100;
}
class PussySer1 implements Serializable{

    transient final int z = 50;// Since final makes the var to be just a value
    // there will be no changes generated by transient,
    // no impact
    int k = 27;

    public String catmi = "Miau";
    RatSer1 r = new RatSer1();

}
class RatSer1  implements Serializable{
    String ratser = " Chits- Chits";
}


class DogDemo1 {

    public static void main(String[] args) throws Exception {
        // Serialization of Only One Object (WolfSer) , and a cascade of references to
        // three other object in order : Wolf- Dog - Cat - Rat


        WolfySer1 w1 = new WolfySer1();
        FileOutputStream fos = new FileOutputStream("dog.txt");
        ObjectOutputStream ous = new ObjectOutputStream(fos);
        ous.writeObject(w1);


// Deserialization in the same order as Serialization
        FileInputStream fis = new FileInputStream("dog.txt");
        ObjectInputStream ois = new ObjectInputStream(fis);
        WolfySer1 w2 = (WolfySer1) ois.readObject();




;
        System.out.println("DogSer reference to PussySer  p.z :" + w2.d.p.z + "   Wolf- Dog - Cat - Rat: " + w2.d.p.r.ratser);
//        System.out.println("RatSer object ratser : " + r2.ratser);
        System.out.println(" Wolf -Dog - Cat  PussySer  catmi :" + w2.d.p.catmi);


    }
}

